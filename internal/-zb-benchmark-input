#!/usr/bin/env zsh

() {
  builtin emulate -L zsh -o err_exit -o no_unset -o warn_create_global || builtin exit

  # There is a bug in zsh that sometimes causes `exec` to return 1 with no
  # diagnostics when the call actually succeeds. This only happens when running
  # `exec` from a zle widget with prompt_subst and command substitutions in
  # prompt. For example, it happens when using ohmyzsh with ZSH_THEME=af-magic.
  -zb-fd-open() {
    builtin emulate -L zsh -o err_exit -o no_unset -o warn_create_global || builtin exit
    [[ ! -v _zb_benchmark_input_fd ]]
    builtin typeset -gi _zb_benchmark_input_fd=-1
    # This can spuriously return 1.
    builtin exec {_zb_benchmark_input_fd} <$1 || builtin true
    (( _zb_benchmark_input_fd >= 0 ))
    builtin zle -F $_zb_benchmark_input_fd $2
  }

  -zb-fd-close() {
    builtin emulate -L zsh -o err_exit -o no_unset -o warn_create_global || builtin exit
    [[ $_zb_benchmark_input_fd == <0-> ]]
    builtin zle -F $_zb_benchmark_input_fd
    # This can spuriously return 1.
    builtin exec {_zb_benchmark_input_fd}>&- || builtin true
    builtin unset _zb_benchmark_input_fd
  }

  if [[ -v _zb_benchmark_input_fd ]]; then
    -zb-fd-close
  else
    (( $# == 4 )) || builtin exit
    builtin typeset -gr  _zb_benchmark_input_output_file=$1
    builtin typeset -gr  _zb_benchmark_input_fifo_file=$2
    builtin typeset -gr  _zb_benchmark_input_buffer=$3
    builtin typeset -gi  _zb_benchmark_input_num_runs=$4

    builtin zmodload zsh/datetime zsh/zselect
    builtin zselect -t 70 || builtin true
    -zb-fd-open /dev/null -zb-benchmark-input

    -zb-benchmark-input-ready() {
      builtin emulate -L zsh -o no_unset -o warn_create_global || builtin exit
      if [[ -v ZINIT_SICE && -v ZINIT_REGISTERED_PLUGINS && -v ZINIT_SNIPPETS ]]; then
        builtin local requested loaded missing
        requested=(${(kou)ZINIT_SICE})
        loaded=(${(ou)ZINIT_REGISTERED_PLUGINS} ${(kou)ZINIT_SNIPPETS})
        missing=(${requested:|loaded})
        (( ! $#missing )) || builtin return
      fi
      [[ -z ${_zsh_defer_tasks-} ]]
    }
  fi
} "$@"

[[ -v _zb_benchmark_input_fd ]] && builtin return

if ! -zb-benchmark-input-ready; then
  -zb-fd-open /dev/null <(builtin zselect -t 10) -zb-benchmark-input
  builtin return
fi

builtin emulate -L zsh -o err_exit -o no_unset -o warn_create_global || builtin exit

if [[ -v widgets[zle-line-pre-redraw] ]]; then
  builtin zle -A -- zle-line-pre-redraw -zb-benchmark-input-orig-zle-line-pre-redraw
else
  -zb-benchmark-input-do-nothing() {}
  builtin zle -N -- -zb-benchmark-input-orig-zle-line-pre-redraw -zb-benchmark-input-do-nothing
fi

builtin zle -N -- zle-line-pre-redraw -zb-benchmark-input-zle-line-pre-redraw

-zb-benchmark-input-init() {
  -zb-benchmark-input-zle-line-pre-redraw() {
    builtin zle -- -zb-benchmark-input-orig-zle-line-pre-redraw "$@" || builtin true
    builtin emulate -L zsh -o err_exit -o no_unset -o warn_create_global || builtin exit
    [[ $_zb_benchmark_input_buffer == ${BUFFER}?* ]]
    if (( ! $+_zb_benchmark_input_fd && $#BUFFER + 1 == $#_zb_benchmark_input_buffer )); then
      -zb-fd-open /dev/null -zb-benchmark-input-start
    fi
  }
}

-zb-benchmark-input-start() {
  builtin emulate -L zsh -o err_exit -o no_unset -o warn_create_global || builtin exit

  builtin zle -F $_zb_benchmark_input_fd

  -zb-benchmark-input-zle-line-pre-redraw() {
    builtin zle -- -zb-benchmark-input-orig-zle-line-pre-redraw "$@"
    if (( ${#BUFFER} == ${#_zb_benchmark_input_buffer} )); then
      -zb-benchmark-input-zle-line-pre-redraw() {
        builtin zle -- -zb-benchmark-input-orig-zle-line-pre-redraw "$@"
      }
      builtin zle -F $_zb_benchmark_input_fd -zb-benchmark-input-end
    fi
  }

  builtin : >>$_zb_benchmark_input_fifo_file
  builtin : <$_zb_benchmark_input_fifo_file
  builtin zselect -t 10 || builtin true
  builtin typeset -gF _zb_benchmark_input_start_time=EPOCHREALTIME
}

-zb-benchmark-input-end() {
  builtin local -F end_time=EPOCHREALTIME

  builtin emulate -L zsh -o err_exit -o no_unset -o warn_create_global || builtin exit

  -zb-fd-close

  builtin local -F3 t='1e3 * (end_time - _zb_benchmark_input_start_time)'
  builtin print -rn -- " $t" >>| $_zb_benchmark_input_output_file

  builtin zle .kill-buffer -w
  builtin zle -R

  if (( --_zb_benchmark_input_num_runs )); then
    -zb-benchmark-input-init
  else
    builtin zle -D -- zle-line-pre-redraw
    if [[ ! -v functions[-zb-benchmark-input-do-nothing] ]]; then
      builtin zle -A -- -zb-benchmark-input-orig-zle-line-pre-redraw zle-line-pre-redraw
    fi
    -zb-benchmark-prompt
  fi

  builtin : >>$_zb_benchmark_input_fifo_file
  builtin : <$_zb_benchmark_input_fifo_file
}

-zb-benchmark-input-init
builtin : >>$_zb_benchmark_input_fifo_file
builtin : <$_zb_benchmark_input_fifo_file
